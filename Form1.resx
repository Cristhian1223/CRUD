<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>